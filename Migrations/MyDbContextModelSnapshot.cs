// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ODataCore3.API.Providers;

namespace ODataCore3.API.Migrations
{
    [DbContext(typeof(ReadersContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("ODataCore3.API.Models.Reader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Readers");

                    b.HasData(
                        new
                        {
                            Id = 1001,
                            AddedOn = new DateTime(2021, 3, 9, 9, 43, 44, 519, DateTimeKind.Local).AddTicks(49),
                            Description = "Loreum Ipseum Loreum Ipseum",
                            Name = "Reader#1001",
                            UserId = 1001
                        },
                        new
                        {
                            Id = 1002,
                            AddedOn = new DateTime(2021, 3, 9, 9, 43, 44, 520, DateTimeKind.Local).AddTicks(4687),
                            Description = "Loreum Ipseum Loreum Ipseum",
                            Name = "Reader#1002",
                            UserId = 1002
                        },
                        new
                        {
                            Id = 1003,
                            AddedOn = new DateTime(2021, 3, 9, 9, 43, 44, 520, DateTimeKind.Local).AddTicks(4753),
                            Description = "Loreum Ipseum Loreum Ipseum",
                            Name = "Reader#1003",
                            UserId = 1003
                        });
                });

            modelBuilder.Entity("ODataCore3.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1001,
                            EmailAddress = "user1001@abc.com",
                            IsActive = true,
                            UserName = "user1001"
                        },
                        new
                        {
                            Id = 1002,
                            EmailAddress = "user1002@abc.com",
                            IsActive = true,
                            UserName = "user1002"
                        },
                        new
                        {
                            Id = 1003,
                            EmailAddress = "user1003@abc.com",
                            IsActive = true,
                            UserName = "user1003"
                        },
                        new
                        {
                            Id = 1004,
                            EmailAddress = "user1004@abc.com",
                            IsActive = true,
                            UserName = "user1004"
                        });
                });

            modelBuilder.Entity("ODataCore3.API.Models.Reader", b =>
                {
                    b.HasOne("ODataCore3.API.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
